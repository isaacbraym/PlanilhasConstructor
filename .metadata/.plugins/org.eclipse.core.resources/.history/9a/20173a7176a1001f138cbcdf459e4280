import org.apache.poi.ss.usermodel.*;

public class EstiloCelula {
    private final Workbook workbook;
    private final Sheet sheet;
    private final CellStyle boldStyle;

    public EstiloCelula(Workbook workbook, Sheet sheet) {
        this.workbook = workbook;
        this.sheet = sheet;
        Font font = workbook.createFont();
        font.setBold(true);

        boldStyle = workbook.createCellStyle();
        boldStyle.setFont(font);
    }

    public EstiloCelula BoldStyle() {
        // Ativa o estilo negrito e permite encadear chamadas
        return this;
    }

    // Converte uma célula no formato "B2" para índices de linha e coluna
    private int[] converterPosicao(String posicao) {
        int coluna = 0;
        int linha = 0;

        for (int i = 0; i < posicao.length(); i++) {
            char ch = posicao.charAt(i);
            if (Character.isLetter(ch)) {
                coluna = coluna * 26 + (Character.toUpperCase(ch) - 'A' + 1);
            } else if (Character.isDigit(ch)) {
                linha = Integer.parseInt(posicao.substring(i)) - 1;
                break;
            }
        }
        return new int[]{coluna - 1, linha};
    }

    // Aplica o estilo em uma linha de uma célula inicial a uma célula final
    public EstiloCelula inserirEmLinha(String posicaoInicial, String posicaoFinal) {
        int[] inicio = converterPosicao(posicaoInicial);
        int[] fim = converterPosicao(posicaoFinal);

        Row row = sheet.getRow(inicio[1]);
        if (row == null) {
            row = sheet.createRow(inicio[1]);
        }

        for (int col = inicio[0]; col <= fim[0]; col++) {
            Cell cell = row.getCell(col);
            if (cell == null) {
                cell = row.createCell(col);
            }
            cell.setCellStyle(boldStyle);
        }
        return this;
    }

    // Aplica o estilo em uma coluna de uma célula inicial a uma célula final
    public EstiloCelula inserirEmColuna(String posicaoInicial, String posicaoFinal) {
        int[] inicio = converterPosicao(posicaoInicial);
        int[] fim = converterPosicao(posicaoFinal);

        for (int rowIdx = inicio[1]; rowIdx <= fim[1]; rowIdx++) {
            Row row = sheet.getRow(rowIdx);
            if (row == null) {
                row = sheet.createRow(rowIdx);
            }
            Cell cell = row.getCell(inicio[0]);
            if (cell == null) {
                cell = row.createCell(inicio[0]);
            }
            cell.setCellStyle(boldStyle);
        }
        return this;
    }
}
