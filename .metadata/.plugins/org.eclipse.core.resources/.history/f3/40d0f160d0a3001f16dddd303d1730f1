package com.abnote.planilhas.impl;

import com.abnote.planilhas.utils.PosicaoConverter;

import org.apache.poi.ss.usermodel.*;

public class CalculosPlanilha {

	public static void converterEmNumero(Sheet sheet, String posicaoInicial) {
		int[] posicao = PosicaoConverter.converterPosicao(posicaoInicial);
		int coluna = posicao[0];
		int linhaInicial = posicao[1];

		for (int i = linhaInicial; i <= sheet.getLastRowNum(); i++) {
			Row row = sheet.getRow(i);
			if (row == null)
				continue;
			Cell cell = row.getCell(coluna);
			if (cell != null && cell.getCellTypeEnum() == CellType.STRING) {
				try {
					double valorNumerico = Double.parseDouble(cell.getStringCellValue());
					cell.setCellType(CellType.NUMERIC);
					cell.setCellValue(valorNumerico);
				} catch (NumberFormatException e) {
					System.out.println("Célula em " + (i + 1) + " não é numérica e foi ignorada.");
				}
			}
		}
	}


	public static void converterEmContabil(Sheet sheet, String posicaoInicial, Workbook workbook) {
		int[] posicao = PosicaoConverter.converterPosicao(posicaoInicial);
		int coluna = posicao[0];
		int linhaInicial = posicao[1];

		// Configuração do estilo contábil para Real (R$)
		CellStyle estiloContabil = workbook.createCellStyle();
		DataFormat formato = workbook.createDataFormat();
		estiloContabil.setDataFormat(formato.getFormat("#,##0.00"));

		for (int i = linhaInicial; i <= sheet.getLastRowNum(); i++) {
			Row row = sheet.getRow(i);
			if (row == null)
				continue;
			Cell cell = row.getCell(coluna);
			if (cell != null) {
				if (cell.getCellTypeEnum() == CellType.STRING) {
					try {
						double valorNumerico = Double.parseDouble(cell.getStringCellValue());
						cell.setCellType(CellType.NUMERIC);
						cell.setCellValue(valorNumerico);
					} catch (NumberFormatException e) {
						System.out.println("Célula em " + (i + 1) + " não é numérica e foi ignorada.");
					}
				}
				if (cell.getCellTypeEnum() == CellType.NUMERIC) {
					cell.setCellStyle(estiloContabil);
				}
			}
		}
	}
}
